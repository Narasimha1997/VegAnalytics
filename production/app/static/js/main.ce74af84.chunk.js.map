{"version":3,"sources":["scripts/basic.js","dashboard/Sidebar.jsx","scripts/Product.js","dashboard/Home.jsx","dashboard/Products.jsx","scripts/vis.js","dashboard/visualizations/Pricing.jsx","dashboard/visualizations/Table.jsx","dashboard/visualizations/Transaction.jsx","dashboard/Visualization.jsx","dashboard/txinfo.jsx","dashboard/Dashboard.jsx","Login.jsx","scripts/User.js","index.js","dashboard/assets/basket.jpg"],"names":["DataCollector","route","callback","Object","classCallCheck","this","postData","_this","console","log","fetch","config","host","headers","Content-Type","Accept","mode","method","body","JSON","stringify","then","data","json","LocalStorage","k","v","localStorage","setItem","removeItem","getItem","Navigator","props","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","AppBar","style","textAlign","width","position","zIndex","Toolbar","IconButton","color","aria-label","Typography","variant","userData","name","React","Component","SidePanel","_this2","_this3","Drawer","List","paddingTop","ListItem","button","onClick","handler","ListItemIcon","Icon","ListItemText","primary","secondary","Divider","getProductList","userID","result","error","collect","getN","N","parseInt","AddSales","_id","products","cost","quantity","selected","productID","lastTx","setState","i","length","updatedCost","totalCost","date","Date","day","getUTCDate","toString","month","getUTCMonth","year","getUTCFullYear","alert","parseFloat","createTransaction","Card","Grid","container","spacing","item","xs","margin","padding","FormControl","Select","value","onChange","e","target","map","MenuItem","marginTop","TextField","id","label","Button","submitTx","Add","height","src","basket","ShowTotalSales","_this4","tx","productName","_this5","prepareResult","Money","totalAmount","ShowTotalQuantity","_this6","totalQuantity","maxQuantity","product","price","href","Home","_this7","paddingLeft","marginLeft","Home_AddSales","Home_ShowTotalSales","Home_ShowTotalQuantity","ProdctRow","row","deleteHandler","objectID","cost_d","updateCost","TableRow","TableCell","deleteProductHandler","Delete","updateCostHandler","AddNewProduct","ProductList","handleDelete","bind","assertThisInitialized","componentDidMount","_this8","Paper","Table","TableHead","TableBody","Products_ProdctRow","Products_AddNewProduct","perMonth","monthWise","months","ProfitPerDay","sort","b","keyA","keyB","values","key","count","computeDataPoints","updateList","react_chartkick_esm","xtitle","ytitile","download","PieChartDistribution","list","total","profit","prepareProductList","updateProportions","ostyle","PriceComparision","_this9","productID1","productID2","data1","data2","productList","_this10","result1","result2","_this11","updateTransactions","_this12","ytitle","PriceLayout","_this13","layout","x","y","w","h","react_grid_layout_default","className","cols","rowHeight","Pricing_ProfitPerDay","Pricing_PieChartDistribution","Pricing_PriceComparision","PerProductSummary","txSummary","updateTable","marginRight","transactions","toFixed","PriceTableLayout","Table_PerProductSummary","defineProperty","counts","YearWiseTransactions","push","xticks","yticks","TransactionLayout","Transaction_YearWiseTransactions","Transaction_PieChartDistribution","Transaction_ProfitPerDay","Visualization","tabClicked","Tabs","indicatorColor","textColor","Tab","Pricing","visualizations_Table","Transaction","TransacionList","getNTransactions","TransactionListContainer","txinfo_TransacionList","MainArea","component","Dashboard","choice","Sidebar_Navigator","Sidebar_SidePanel","Dashboard_MainArea","SignIn","email","password","message","classes","CssBaseline","sm","md","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","elevation","square","display","flexDirection","Avatar","LockOutlined_default","noValidate","required","fullWidth","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","submit","ui_callback","ReactDOM","render","dashboard_Dashboard","document","getElementById","jsonString","add","Link","withStyles","root","image","paper","alignItems","avatar","form","Main","ls","check","parse","checkStorage","Login","src_Main","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ce74af84.chunk.js","sourcesContent":["\nimport config from './config.json'\n\nclass DataCollector {\n    constructor(route, callback) {\n        this.route = route\n        this.callback = callback\n    }\n\n    collect(postData) {\n        console.log(postData)\n        fetch(config.host + this.route, {\n            headers : {\n                \"Content-Type\" : \"application/json\",\n                \"Accept\" : \"application/json\"\n            },\n            mode : 'cors',\n            method : 'post',\n            body : JSON.stringify(postData)\n        }).then((data) => data.json()).then((data) => {\n            this.callback(data)\n        })\n    }\n}\n\nclass LocalStorage {\n    add(k, v) {\n        localStorage.setItem(k, v)\n    }\n\n    delete(k) {\n        localStorage.removeItem(k)\n    }\n\n    get(k) {\n        localStorage.getItem(k)\n    }\n\n    check(k) {\n        if(localStorage.getItem(k) == null) return false\n        return true\n    }\n}\n\nexport {LocalStorage, DataCollector}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport  Drawer  from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon  from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport Icon from '@material-ui/core/Icon'\nimport {AppBar, Toolbar, IconButton} from '@material-ui/core/'\nimport  Typography  from '@material-ui/core/Typography';\n\n\nvar megaStore = \"Royal Mart\"\n\nclass Navigator extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    render() {\n       return (\n           <AppBar style = {{textAlign : 'left', width  : \"100%\", position : 'fixed', zIndex  : 100000}}>\n             <Toolbar>\n                 <IconButton color = \"inherit\" aria-label = \"Menu\">\n                    \n                 </IconButton>\n                 <Typography variant = \"h6\" color = \"inherit\">{this.props.userData.name}</Typography>\n             </Toolbar>\n             </AppBar>\n       )\n   }\n}\n\nclass SidePanel extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <Drawer variant = \"permanent\">\n               <div style = {{width : '250px'}}>\n                   <List style = {{paddingTop : '70px'}}>\n                       <ListItem button onClick = {() => {\n                           this.props.handler(0)\n                       }}> \n                           <ListItemIcon><Icon>more</Icon></ListItemIcon>\n                           <ListItemText primary = \"Home\" secondary = \"Update purchase information\" />\n                       </ListItem>\n                       <Divider />\n                       <ListItem button onClick = {() => {\n                           this.props.handler(2)\n                       }}>\n                           <ListItemIcon><Icon>insert_chart_outline</Icon></ListItemIcon>\n                           <ListItemText primary = \"Visualization\" secondary = \"Visualize the sales in real-time\" />\n                       </ListItem>\n                       <Divider />\n                       <ListItem button onClick = {() => {\n                           this.props.handler(3)\n                       }}>\n                           <ListItemIcon><Icon>public</Icon></ListItemIcon>\n                           <ListItemText primary = \"Configure\" secondary = \"Configure your store with new products\" />\n                       </ListItem>\n                       <Divider />\n                       <ListItem button onClick = {() => {\n                           this.props.handler(4)\n                       }}>\n                           <ListItemIcon><Icon>sentiment_satisfied</Icon></ListItemIcon>\n                           <ListItemText primary = \"Transaction Details\" secondary = \"Get a list of all transactions\" />\n                       </ListItem>\n                   </List>\n               </div>\n            </Drawer>\n        )\n    }\n}\n\nexport {SidePanel, Navigator}\n","import { DataCollector } from \"./basic\";\n\n\nfunction createProduct(userID, name, cost, quantity) {\n    new DataCollector('/product/create', (result) => {\n        if(!result.error) alert(\"Product create\")\n    }).collect({\n        userID : userID,\n        name : name,\n        cost : parseFloat(cost) + 0.001,\n        quantity : parseFloat(quantity) + 0.001\n    })\n}\n\nfunction createTransaction(userID, productID, cost, quantity, totalCost, date, month, year) {\n    new DataCollector('/transaction/create', (result) => {\n        if(!result.error) alert(\"Transaction created\")\n    }).collect({\n        userID : userID,\n        productID : productID,\n        cost : parseFloat(cost) + 0.001,\n        quantity : parseFloat(quantity) + 0.001,\n        totalCost : parseFloat(totalCost) + 0.001,\n        date : date,\n        month : month,\n        year : year\n    })\n}\n\nfunction getProductList(userID, callback) {\n    new DataCollector(\"/product/getProducts\", (result) => {\n        if(!result.error) callback(result)\n    }).collect({userID : userID})\n}\n\nfunction updateCost(productID, cost) {\n    var cost_d = parseFloat(cost)\n    new DataCollector(\"/product/updatePrice\", (result) => {\n        console.log(result)\n        if(!result.error) alert(\"Product updated \")\n    }).collect({objectID : productID, cost : cost_d})\n}\n\nfunction deleteProduct(productID, callback) {\n    console.log(productID)\n    new DataCollector(\"/product/delete\", (result) => {\n        console.log(result)\n        if(!result.error) callback()\n    }).collect({objectID : productID})\n}\n\nfunction getN(userID, N, callback) {\n    new DataCollector(\"/transaction/getN\", (result) => {\n        if(!result.error) callback(result.result)\n    }).collect({\n        userID : userID,\n        N : parseInt(N)\n    })\n}\n\nexport {getProductList, updateCost, deleteProduct, getN, createProduct, createTransaction}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Card, Grid, Divider, FormControl, MenuItem, Select, TextField, Button, Icon, Typography } from '@material-ui/core'\nimport {Add, Money, TrendingUp} from '@material-ui/icons'\nimport {getProductList, getN, createTransaction} from '../scripts/Product'\n\nimport basket from './assets/basket.jpg'\n\nclass AddSales extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userID : this.props.userData._id,\n            products : [],\n            cost : 0.0,\n            quantity : 0.0,\n            selected : '',\n            productID : '',\n            lastTx : null\n        }\n    }\n\n    componentWillMount() {\n        getProductList(this.state.userID, (result) => {\n            this.setState({products : result.result})\n            getN(this.state.userID, 1, (result) => {\n                this.setState({lastTx : result[0]})\n            })\n        })\n    }\n\n    submitTx() {\n        var cost = 0\n        for(var i = 0; i < this.state.products.length; i++) {\n            if(this.state.products[i]._id === this.state.productID) {\n                cost += this.state.products[i].cost * this.state.quantity\n                break\n            } \n        }\n        \n        var updatedCost = cost + this.state.lastTx.totalCost\n        var date = new Date()\n        var day =  date.getUTCDate().toString()\n        var month = (date.getUTCMonth() + 1).toString()\n        var year = (date.getUTCFullYear()).toString()\n\n        createTransaction(this.state.userID, this.state.productID, cost, this.state.quantity, updatedCost, day, month, year)\n        \n    }\n\n    render() {\n        return (\n            <div>\n                <Card style = {{width : \"100%\"}}>\n                    <Grid container spacing = {3}>\n                        <Grid item xs = {8}>\n                           <div style = {{margin : \"20px auto\", textAlign : 'left', padding : '10px'}}>\n                               <Typography variant = \"primary\">Update Sales information : </Typography>\n                               <Divider />\n                               <div>\n                                   <p>Product</p>\n                                   <FormControl>\n                                       <Select value = {this.state.productID} onChange = {(e) => {\n                                           this.setState({productID : e.target.value})\n                                       }}>\n                                           {\n                                               this.state.products.map((k, v) => {\n                                                   return (\n                                                       <MenuItem value = {k._id}>{k.name + \" Price : \"+ k.cost}</MenuItem>\n                                                   )\n                                               })\n                                           }\n                                       </Select>\n                                   </FormControl>\n                                   <div style = {{marginTop : '20px'}}>\n                                       <FormControl>\n                                       <TextField\n                                            id=\"outlined-name\"\n                                            label=\"Quantity\"\n                                            value={this.state.quantity}\n                                            onChange = {(e) => {this.setState({quantity : e.target.value})}}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                        />\n                                       </FormControl>\n                                   </div>\n                                   <div style = {{marginTop : '20px'}}>\n                                       <Button variant = \"contained\" color = \"primary\" onClick = {() => {\n                                           this.submitTx()\n                                       }}><Icon><Add></Add></Icon>  Add</Button>,\n                                   </div>\n                               </div>\n                           </div>\n                        </Grid>\n                        <Grid item xs = {4}>\n                            <div style = {{height : '400px',width : \"100%\"}}>\n                                <img src = {basket} />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Card>\n            </div>\n        )\n    }\n}\n\nclass ShowTotalSales extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userID : this.props.userData._id,\n            products : [],\n            tx : null,\n            productName : ''\n        }\n    }\n\n    prepareResult() {\n        for(var i = 0; i < this.state.products.length; i++) {\n            if(this.state.tx.productID === this.state.products[i]._id) {\n                this.setState({productName : this.state.products[i].name})\n                break;\n            }\n        }\n    }\n\n    componentWillMount() {\n        getProductList(this.state.userID, (result) => {\n            this.setState({products : result.result})\n            getN(this.state.userID, 1, (result) => {\n                this.setState({tx : result[0]})\n                this.prepareResult()\n            })\n        })\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <Card style = {{margin : '20px auto'}}>\n                    <div style = {{padding : '20px', textAlign : 'left'}}>\n                        <Typography>Amount earned today : </Typography>\n                        <Typography><Money /> {this.state.totalAmount} Rs</Typography>\n                        <Divider />\n                        <Typography>Recent Transaction Detail : </Typography>\n                        {\n                            (this.state.tx !== null) && (\n                                <p>{this.state.productName} , Quantity : {this.state.tx.quantity}, Amount : {this.state.tx.cost}</p>\n                            )\n                        }\n                    </div>\n                </Card>\n            </div>\n        )\n    }\n}\n\nclass ShowTotalQuantity extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            totalQuantity : 500.0,\n            maxQuantity : {\n                product : \"Tomato\",\n                quantity : 32.0,\n                price : 20.0 * 32.0\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Card style = {{margin : '20px auto'}}>\n                    <div style = {{padding : '20px', textAlign : 'left'}}>\n                        <Typography variant = \"h5\">Export Data  : </Typography>\n                        <Divider />\n                        <a target = \"__blank\" href = \"http://localhost:5000/export/products.csv\"><Button variant = \"contained\" color = \"primary\">Download Products</Button></a>\n                        <a target = \"__blank\" href = \"http://localhost:5000/export/transactions.csv\"><Button variant = \"contained\" color = \"primary\">Download Transactions</Button></a>\n                    </div>\n                </Card>\n            </div>\n        )\n    }\n}\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            \n        }\n    }\n\n    render() {\n        return (\n            <div style = {{paddingLeft : '250px', width : '80%', paddingTop : \"70px\"}}>\n                <div style = {{marginLeft : ''}}>\n                <Grid container spacing = {3}>\n                    <Grid item xs = {7}>\n                        <AddSales userData = {this.props.userData}/>\n                    </Grid>\n                    <Grid item xs = {5}>\n                        <ShowTotalSales userData = {this.props.userData}/>\n                        <ShowTotalQuantity userData = {this.props.userData}/>\n                    </Grid>\n                </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Button, Paper, Typography, Divider, Table, TableHead, TableCell, TableRow, TableBody, TextField} from '@material-ui/core'\nimport {Delete, Add} from '@material-ui/icons'\nimport {createProduct, getProductList, updateCost, deleteProduct} from '../scripts/Product';\n\nclass ProdctRow extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            product : this.props.row,\n            cost : this.props.row.cost,\n            quantity : this.props.row.quantity\n        }\n    }\n\n    deleteProductHandler() {\n        deleteProduct(this.state.product.name, () => {\n            this.props.deleteHandler()\n        })\n    }\n\n\n    updateCostHandler() {\n        updateCost(this.state.product.name, this.state.cost)\n    }\n\n    render() {\n        return (\n            <TableRow>\n                <TableCell>{this.state.product.name}</TableCell>\n                <TableCell>\n                    <TextField value = {this.state.quantity} onChange = {(e) => {\n                        this.setState({quantity : e.target.value})\n                    }}/>\n                </TableCell>\n                <TableCell><TextField value = {this.state.cost} onChange = {(e) => {\n                        this.setState({cost : e.target.value})\n                    }}/></TableCell>\n                <TableCell><Button variant = \"contained\" color = \"primary\" onClick = {() => this.deleteProductHandler()}><Delete /> Delete</Button></TableCell>\n                <TableCell><Button variant = \"contained\" color = \"primary\" onClick = {() => this.updateCostHandler()}>Update</Button></TableCell>\n            </TableRow>\n        )\n    }\n\n}\n\nclass AddNewProduct extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userID : this.props.userData._id,\n            name : '',\n            quantity : 0.0,\n            cost : 0.0\n        }\n    }\n\n    render() {\n        return (\n            <div style = {{margin : '10px auto', padding : '10px'}}>\n                <Typography variant = \"h6\">Add new product : </Typography>\n                <Divider />\n                <div style = {{marginTop : '10px'}}>\n                <TextField value = {this.state.name} onChange = {(e) => {\n                        this.setState({name : e.target.value})}} label = \"Name\" />\n                </div>\n                <div style = {{marginTop : '10px'}}>\n                <TextField value = {this.state.cost} onChange = {(e) => {\n                        this.setState({cost : e.target.value})}} label = \"cost\" />\n                </div>\n                <div style = {{marginTop : '10px'}}>\n                <TextField value = {this.state.quantity} onChange = {(e) => {\n                        this.setState({quantity : e.target.value})}} label = \"quantity\" />\n                </div>\n                <div style = {{marginTop : '10px'}}>\n                   <Button variant = \"contained\" color = \"primary\" onClick = {() => {\n                       createProduct(this.state.userID, this.state.name, this.state.cost, this.state.quantity)\n                   }}><Add /> Add</Button>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nclass ProductList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            products : []\n        }\n        this.handleDelete = this.handleDelete.bind(this)\n    }\n\n    componentDidMount() {\n        getProductList(this.props.userData._id, (result) => {\n            this.setState({products : result.result})\n        })\n    }\n\n    handleDelete() {\n        this.componentDidMount()\n    }\n\n    render() {\n        return (\n            <div style = {{paddingLeft: '250px', width : '80%', paddingTop : \"70px\"}}>\n                <Paper style = {{padding : '20px'}}>\n                    <Typography variant = \"h3\">Products</Typography>\n                    <Typography>List of products in your inventory</Typography>\n                    <Divider />\n                    <Table>\n                        <TableHead>\n                            <TableCell>Product Name</TableCell>\n                            <TableCell>Quantity</TableCell>\n                            <TableCell>Cost</TableCell>\n                            <TableCell>Delete</TableCell>\n                            <TableCell>Update</TableCell>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                this.state.products.map((k, v) => {\n                                    return (\n                                        <ProdctRow row = {k} deleteHandler = {this.handleDelete} />\n                                    )\n                                })\n                            }\n                        </TableBody>\n                    </Table>\n                    <AddNewProduct userData = {this.props.userData}/>\n                </Paper>\n            </div>\n        )\n    }\n}\n\nexport default ProductList","import { DataCollector } from \"./basic\";\n\nfunction perMonth(userID, productID, month, year, callback) {\n    new DataCollector('/transaction/perMonth', (result) => {\n        if(!result.error) callback(result.result)\n    }).collect({\n        userID : userID, \n        productID : productID,\n        month : parseInt(month),\n        year : year\n    })\n}\n\nfunction proprtionPerMonth(userID, month, year, callback) {\n    new DataCollector('/transaction/proportionMonth', (result) => {\n        if(!result.error) callback(result.result)\n    }).collect({\n        userID : userID,\n        month : month,\n        year : year\n    })\n}\n\nfunction perProductSummary(userID, productID, year, callback) {\n    new DataCollector('/transaction/perProductSummary', (result) => {\n        if(!result.error) callback(result.result)\n    }).collect({\n        userID : userID,\n        productID : productID,\n        year : year\n    })\n}\n\nfunction yearWise(userID, year, callback) {\n    new DataCollector('/transaction/yearWise', (result) => {\n        if(!result.error) callback(result.result)\n    }).collect({\n        userID : userID,\n        year : year\n    })\n}\n\nfunction monthWise(userID, productID, month, year, callback) {\n    new DataCollector('/transaction/monthWise', (result) => {\n        if(!result.error) callback(result.result)\n    }).collect({\n        userID : userID,\n        month : month,\n        year : year,\n        productID : productID\n    })\n}\n\nfunction productWise(userID, month, year, callback) {\n    new DataCollector('/transaction/productProportion', (result) => {\n        if(!result.error) callback(result.result)\n    }).collect({\n        userID : userID,\n        month : month,\n        year : year\n    })\n}\n\n\nexport {perMonth, proprtionPerMonth, perProductSummary, yearWise, monthWise, productWise}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GridLayout from 'react-grid-layout'\nimport 'react-grid-layout/css/styles.css'\nimport 'react-resizable/css/styles.css'\nimport { Card, Divider, Button, Typography, Select, MenuItem } from '@material-ui/core';\nimport { getProductList } from '../../scripts/Product';\nimport { perMonth, proprtionPerMonth } from '../../scripts/vis';\n\nimport { LineChart, PieChart } from 'react-chartkick'\nimport 'chart.js'\n\nvar months = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\n\nclass ProfitPerDay extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            month : 1,\n            year : 2018,\n            productID : '',\n            userID : this.props.userData._id,\n            products : [],\n            data : null\n        }\n    }\n\n    computeDataPoints(result) {\n        result.sort(function(a, b){\n            var keyA = a._id,\n                keyB = b._id;\n            \n            if(keyA < keyB) return -1;\n            if(keyA > keyB) return 1;\n            return 0;\n        });\n        var data = {label : 'Sales in ' + months[this.state.month - 1], values : {}}\n        for(var i = 0; i < result.length; i++) {\n            var key = result[i]._id\n            data.values[key] = result[i].count\n        }\n        this.setState({data : data})\n    }\n\n    componentWillMount() {\n        getProductList(this.state.userID, (result) => {\n            this.setState({products : result.result, productID : result.result[0]._id})\n            perMonth(this.state.userID, this.state.productID, this.state.month, this.state.year, (result) => {\n                this.computeDataPoints(result)\n            })\n        })\n    }\n\n    updateList() {\n        perMonth(this.state.userID, this.state.productID, this.state.month, this.state.year, (result) => {\n            this.computeDataPoints(result)\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Card style = {{width : '100%', height : '100%', padding  : '10px', textAlign : 'left'}}>\n                    <Typography variant = \"h4\">Month-wise sales :</Typography>\n                    <Divider />\n                    <div style = {{margin : '20px auto'}}>\n                        <Select value = {this.state.month} style = {{marginLeft : '20px auto'}} onChange = {(e) => {\n                            this.setState({month : parseInt(e.target.value) + 1 })\n                        }}>\n                            {\n                                months.map((k,v) => {\n                                    return (\n                                        <MenuItem value = {v}>{k}</MenuItem>\n                                    )\n                                })\n                            }\n                        </Select>\n                        <Select value = {this.state.productID} onChange = {(e) => {\n                            this.setState({productID: e.target.value})\n                        }} style = {{marginLeft : '40px'}}>\n                            {\n                                this.state.products.map((k,v) => {\n                                    return (\n                                        <MenuItem value = {k._id}>{k.name}</MenuItem>\n                                    )\n                                })\n                            }\n                        </Select>\n                        <Button variant = \"contained\" color = \"primary\" onClick = {() => {\n                            this.updateList()\n                        }} style = {{marginLeft : '40px'}}>Update</Button>\n                    </div>\n                    <div>\n                        {\n                            (this.state.data !== null) && (\n                                <div>\n                                   <LineChart xtitle = \"days\" ytitile = \"profit\" data = {this.state.data.values} download = {true} />\n                                </div>\n                            )\n                        }\n                    </div>\n                </Card>\n            </div>        \n        )\n    }\n}\n\n\nclass PieChartDistribution extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userID : this.props.userData._id,\n            year : 2018,\n            month : 1,\n            data : null,\n            products : {}\n        }\n    }\n\n    prepareProductList(products) {\n        var list = {}\n        for(var i = 0; i < products.length; i ++) {\n            list[products[i]._id] = products[i].name\n        }\n\n        this.setState({products : list})\n    }\n\n    computeDataPoints(result, total) {\n         var data = {label : \"Distribution of sales in \" + months[this.state.month - 1] + \" in percentage\" , values : {}}\n\n         for(var i = 0; i < result.length; i++) {\n             var key = this.state.products[result[i]._id]\n             data.values[key] = (result[i].profit / total) \n         }\n         this.setState({data : data})\n    } \n\n    updateProportions() {\n        proprtionPerMonth(this.state.userID, this.state.month, this.state.year, (result) => {\n            this.computeDataPoints(result.result, result.total)\n        })\n    }\n\n    componentWillMount() {\n       getProductList(this.state.userID, (result) => {\n           this.prepareProductList(result.result)\n           this.updateProportions()\n       })\n    }\n\n    render() {\n        return (\n            <Card style = {{width : '100%', height : '100%', padding : '10px', textAlign : 'left'}}>\n                <Typography variant = \"h5\">Contribution of each product to total profit</Typography>\n                <Divider />\n                <div style = {{margin : '20px auto'}}>\n                    <Select value = {this.state.month} onChange = {(e) => this.setState({month : parseInt(e.target.value)})}>\n                        {\n                            months.map((k, v) => {\n                                return (\n                                    <MenuItem value = {v}>{k}</MenuItem>\n                                )\n                            })\n                        }\n                    </Select>\n                    <Button variant = \"contained\" color = \"primary\" onClick = {() => this.updateProportions()}  ostyle = {{marginLeft : '30px'}}>Update</Button>\n                </div>\n                <div>\n                    {\n                        (this.state.data !== null) && (\n                            <PieChart download = {true} data = {this.state.data.values} />\n                        )\n                    }\n                </div>\n            </Card>\n        )\n    }\n}\n\nclass PriceComparision extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            productID1 : '', productID2 : '',\n            month : 1,\n            year : 2018,\n            products : [],\n            data1 : {},\n            data2 : {},\n            userID : this.props.userData._id,\n            productList : {}\n        }\n    }\n\n    prepareProductList(products) {\n        var list = {}\n        for(var i = 0; i < products.length; i ++) {\n            list[products[i]._id] = products[i].name\n        }\n\n        this.setState({productList : list})\n    }\n\n    computeDataPoints(result , id) {\n        result.sort(function(a, b){\n            var keyA = a._id,\n                keyB = b._id;\n            // Compare the 2 dates\n            if(keyA < keyB) return -1;\n            if(keyA > keyB) return 1;\n            return 0;\n        });\n        var data = {label : 'Sales in ' + months[this.state.month - 1], values : {}}\n        for(var i = 0; i < result.length; i++) {\n            var key = result[i]._id\n            data.values[key] = result[i].count\n        }\n        switch(id) {\n            case 0 : this.setState({data1 : data}); break;\n            case 1 : this.setState({data2 : data}); break;\n            default : ;\n        }\n    }\n\n    updateTransactions() {\n        perMonth(this.state.userID, this.state.productID1, this.state.month, this.state.year, (result1) => {\n            perMonth(this.state.userID, this.state.productID2, this.state.month, this.state.year, (result2) => {\n                this.computeDataPoints(result1, 0)\n                this.computeDataPoints(result2, 1)\n            })\n        })\n    }\n\n    componentWillMount() {\n        getProductList(this.state.userID, (result) => {\n            this.prepareProductList(result.result)\n            this.setState({products : result.result})\n            this.setState({productID1 : result.result[0]._id, productID2 : result.result[0]._id})\n            this.updateTransactions()\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Card style = {{width : '100%', height : '100%', padding  : '10px', textAlign : 'left'}}>\n                    <Typography variant = \"h4\">Month-wise sales comparision :</Typography>\n                    <Divider />\n                    <div style = {{margin : '20px auto'}}>\n                        <Select value = {this.state.month} style = {{marginLeft : '20px auto'}} onChange = {(e) => {\n                            this.setState({month : parseInt(e.target.value) + 1 })\n                        }}>\n                            {\n                                months.map((k,v) => {\n                                    return (\n                                        <MenuItem value = {v}>{k}</MenuItem>\n                                    )\n                                })\n                            }\n                        </Select>\n                        <Select value = {this.state.productID1} onChange = {(e) => {\n                            this.setState({productID1: e.target.value})\n                        }} style = {{marginLeft : '40px'}}>\n                            {\n                                this.state.products.map((k,v) => {\n                                    return (\n                                        <MenuItem value = {k._id}>{k.name}</MenuItem>\n                                    )\n                                })\n                            }\n                        </Select>\n                        <Select value = {this.state.productID2} onChange = {(e) => {\n                            this.setState({productID2: e.target.value})\n                        }} style = {{marginLeft : '40px'}}>\n                            {\n                                this.state.products.map((k,v) => {\n                                    return (\n                                        <MenuItem value = {k._id}>{k.name}</MenuItem>\n                                    )\n                                })\n                            }\n                        </Select>\n                        <Button variant = \"contained\" color = \"primary\" onClick = {() => {\n                            this.updateTransactions()\n                        }} style = {{marginLeft : '40px'}}>Update</Button>\n                    </div>\n                    <div>\n                        {\n                            (this.state.data !== null) && (\n                                <div>\n                                   <LineChart data = {[\n                                       {\"name\" : this.state.productList[this.state.productID1], \"data\" : this.state.data1.values},\n                                       {\"name\" : this.state.productList[this.state.productID2], \"data\": this.state.data2.values}\n                                   ]} download = {true} ytitle = \"Profit\" xtitle = \"days\" />\n                                </div>\n                            )\n                        }\n                    </div>\n                </Card>\n            </div>        \n        )\n    }\n}\n\nclass PriceLayout extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.layout = [\n            {i: 'a', x: 0, y: 0, w: 6, h: 11},\n            {i: 'b', x: 6, y: 0, w: 5, h: 11},\n            {i: 'c', x: 0, y: 11.2, w: 11, h: 9}\n          ];\n    }\n\n    render() {\n        return (\n            <GridLayout className=\"layout\" layout= {this.layout} cols={12} rowHeight={30} width={1200}>\n              <div key=\"a\"><ProfitPerDay  userData = {this.props.userData} /></div>\n              <div key=\"b\"><PieChartDistribution userData = {this.props.userData} /></div>\n              <div key=\"c\"><PriceComparision userData = {this.props.userData} /></div>\n            </GridLayout>\n        )\n    }\n}\n\nexport default PriceLayout","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Button, Table, Typography, Divider, Select, MenuItem, TableHead, TableCell, TableBody, Card, TableRow} from '@material-ui/core'\nimport { getProductList } from '../../scripts/Product';\nimport { perProductSummary } from '../../scripts/vis';\n\nvar months = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\n\nclass PerProductSummary extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userID : this.props.userData._id,\n            productID : '',\n            products : [],\n            txSummary : [],\n            year : 2018\n        }\n    }\n\n    updateTable() {\n        perProductSummary(this.state.userID, this.state.productID, this.state.year, (result) => {\n            this.setState({txSummary : result})\n        })\n    }\n\n    componentWillMount() {\n        getProductList(this.state.userID, (result) => {\n            this.setState({products : result.result, productID : result.result[0]._id})\n            this.updateTable()\n        })\n    }\n\n    render() {\n        return (\n            <Card style = {{margin : '20px auto', padding : '20px', textAlign : 'left'}}>\n                <Typography variant = \"h4\">Product Summary</Typography>\n                <Divider />\n                <div style = {{marginTop : '20px'}}>\n                    <Select style = {{marginRight : '30px'}} value = {this.state.productID} onChange = {(e) => this.setState({productID : e.target.value})}>\n                        {\n                            this.state.products.map((k, v) => {\n                                return (\n                                    <MenuItem value = {k._id}>{k.name}</MenuItem>\n                                )\n                            })\n                        }\n                    </Select>\n                    <Button variant = \"contained\" onClick = {() => this.updateTable()} color = \"primary\">Display</Button>\n                </div>\n                <p>The table below shows the summary of all the transactions per month, you can also view the transactions per day by clicking on the table entry</p>\n                <Divider />\n                <div style = {{marginTop : '20px', textAlign : 'center'}}>\n                    <Table>\n                        <TableHead>\n                            <TableCell>Month</TableCell>\n                            <TableCell>Profit</TableCell>\n                            <TableCell>Quantities sold</TableCell>\n                            <TableCell>Total Transactions</TableCell>\n                            <TableCell>Average Transactions</TableCell>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                this.state.txSummary.map((k, v) => {\n                                    return (\n                                    <TableRow>\n                                        <TableCell>{months[parseInt(k._id) - 1]}</TableCell>\n                                        <TableCell>{k.profit}</TableCell>\n                                        <TableCell>{k.quantity}</TableCell>\n                                        <TableCell>{k.transactions}</TableCell>\n                                        <TableCell>{(k.transactions / 31).toFixed(0)}</TableCell>\n                                    </TableRow> )\n                                })\n                            }\n                        </TableBody>\n                    </Table>\n                </div>\n            </Card>\n        )\n    }\n}\n\nclass PriceTableLayout extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <div>\n                <PerProductSummary userData = {this.props.userData} />\n            </div>\n        )\n    }\n}\n\nexport default PriceTableLayout","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GridLayout from 'react-grid-layout'\nimport 'react-grid-layout/css/styles.css'\nimport 'react-resizable/css/styles.css'\nimport { Card, Divider, Button, Typography, Select, MenuItem } from '@material-ui/core';\nimport { getProductList } from '../../scripts/Product';\nimport { yearWise, productWise , monthWise} from '../../scripts/vis';\nimport { LineChart, BarChart , PieChart} from 'react-chartkick'\n\nvar months = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\nclass ProfitPerDay extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            month : 1,\n            year : 2018,\n            productID : '',\n            userID : this.props.userData._id,\n            products : [],\n            data : null\n        }\n    }\n\n    computeDataPoints(result) {\n        result.sort(function(a, b){\n            var keyA = a._id,\n                keyB = b._id;\n            \n            if(keyA < keyB) return -1;\n            if(keyA > keyB) return 1;\n            return 0;\n        });\n        var data = {label : 'Transactions in ' + months[this.state.month - 1], values : {}}\n        for(var i = 0; i < result.length; i++) {\n            var key = result[i]._id\n            data.values[key] = result[i].count\n        }\n        this.setState({data : data})\n    }\n\n    componentWillMount() {\n        getProductList(this.state.userID, (result) => {\n            this.setState({products : result.result, productID : result.result[0]._id})\n            monthWise(this.state.userID, this.state.productID, this.state.month, this.state.year, (result) => {\n                this.computeDataPoints(result)\n            })\n        })\n    }\n\n    updateList() {\n        monthWise(this.state.userID, this.state.productID, this.state.month, this.state.year, (result) => {\n            this.computeDataPoints(result)\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Card style = {{width : '100%', height : '100%', padding  : '10px', textAlign : 'left'}}>\n                    <Typography variant = \"h4\">Month-wise transactions per product :</Typography>\n                    <Divider />\n                    <div style = {{margin : '20px auto'}}>\n                        <Select value = {this.state.month} style = {{marginLeft : '20px auto'}} onChange = {(e) => {\n                            this.setState({month : parseInt(e.target.value) + 1 })\n                        }}>\n                            {\n                                months.map((k,v) => {\n                                    return (\n                                        <MenuItem value = {v}>{k}</MenuItem>\n                                    )\n                                })\n                            }\n                        </Select>\n                        <Select value = {this.state.productID} onChange = {(e) => {\n                            this.setState({productID: e.target.value})\n                        }} style = {{marginLeft : '40px'}}>\n                            {\n                                this.state.products.map((k,v) => {\n                                    return (\n                                        <MenuItem value = {k._id}>{k.name}</MenuItem>\n                                    )\n                                })\n                            }\n                        </Select>\n                        <Button variant = \"contained\" color = \"primary\" onClick = {() => {\n                            this.updateList()\n                        }} style = {{marginLeft : '40px'}}>Update</Button>\n                    </div>\n                    <div>\n                        {\n                            (this.state.data !== null) && (\n                                <div>\n                                   <LineChart download = {true} xtitle = \"days\" ytitle = \"Transactions\" data = {this.state.data.values} download = {true} />\n                                </div>\n                            )\n                        }\n                    </div>\n                </Card>\n            </div>        \n        )\n    }\n}\n\n\nclass PieChartDistribution extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userID : this.props.userData._id,\n            year : 2018,\n            month : 1,\n            data : null,\n            products : {}\n        }\n    }\n\n    prepareProductList(products) {\n        var list = {}\n        for(var i = 0; i < products.length; i ++) {\n            list[products[i]._id] = products[i].name\n        }\n\n        this.setState({products : list})\n    }\n\n    computeDataPoints(result) {\n         var data = {label : \"Distribution of transactions in \" + months[this.state.month - 1] + \" in percentage\" , values : {}}\n\n         for(var i = 0; i < result.length; i++) {\n             var key = this.state.products[result[i]._id]\n             data.values[key] = result[i].counts \n         }\n         this.setState({data : data})\n    } \n\n    updateProportions() {\n        productWise(this.state.userID, this.state.month, this.state.year, (result) => {\n            this.computeDataPoints(result)\n            console.log(result.result)\n        })\n    }\n\n    componentWillMount() {\n       getProductList(this.state.userID, (result) => {\n           this.prepareProductList(result.result)\n           this.updateProportions()\n       })\n    }\n\n    render() {\n        return (\n            <Card style = {{width : '100%', height : '100%', padding : '10px', textAlign : 'left'}}>\n                <Typography variant = \"h5\">Contribution of each product to Transactions</Typography>\n                <Divider />\n                <div style = {{margin : '20px auto'}}>\n                    <Select value = {this.state.month} onChange = {(e) => this.setState({month : parseInt(e.target.value)})}>\n                        {\n                            months.map((k, v) => {\n                                return (\n                                    <MenuItem value = {v}>{k}</MenuItem>\n                                )\n                            })\n                        }\n                    </Select>\n                    <Button variant = \"contained\" color = \"primary\" onClick = {() => this.updateProportions()}  ostyle = {{marginLeft : '30px'}}>Update</Button>\n                </div>\n                <div>\n                    {\n                        (this.state.data !== null) && (\n                            <PieChart download = {true} data = {this.state.data.values} />\n                        )\n                    }\n                </div>\n            </Card>\n        )\n    }\n}\n\nclass YearWiseTransactions extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userID : this.props.userData._id,\n            year : 2018,\n            data : []\n        }\n    }\n\n    computeDataPoints(result) {\n        var data = []\n        for(var i = 0; i < result.length; i++) {\n            var key = months[parseInt(result[i]._id) - 1]\n            data.push([key, result[i].transactions])\n        }\n\n        this.setState({data : data})\n    }\n\n    componentWillMount() {\n        yearWise(this.state.userID, this.state.year, (result) => {\n            console.log(result)\n            this.computeDataPoints(result)\n        })\n    }\n\n    render() {\n        return (\n            <Card style = {{width : '100%', height : '100%', padding : '10px'}}>\n                <Typography variant = \"h5\">Yearwise transactions :</Typography>\n                <Divider />\n                <div style = {{marginTop : '20px'}}>\n                    <BarChart download = {true} data = {this.state.data} xticks = \"Months\" yticks = \"Transaction\"/>\n                </div>\n            </Card>\n        )\n    }\n}\n\n\nclass TransactionLayout extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.layout = [\n            {i: 'a', x: 0, y: 0, w: 6, h: 11},\n            {i: 'b', x: 6, y: 0, w: 5, h: 11},\n            {i: 'c', x: 0, y: 11.2, w: 11, h: 9}\n          ];\n    }\n\n    render() {\n        return (\n            <GridLayout className=\"layout\" layout= {this.layout} cols={12} rowHeight={30} width={1200}>\n              <div key=\"a\"><YearWiseTransactions  userData = {this.props.userData} /></div>\n              <div key=\"b\"><PieChartDistribution userData = {this.props.userData} /></div>\n              <div key=\"c\"><ProfitPerDay userData = {this.props.userData} /></div>\n            </GridLayout>\n        )\n    }\n}\n\nexport default TransactionLayout","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Button, Tabs, Tab, AppBar} from '@material-ui/core'\nimport PriceLayout from './visualizations/Pricing';\nimport PriceTableLayout from './visualizations/Table';\nimport TransactionLayout from './visualizations/Transaction';\n\n\nclass Visualization extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tabClicked : 0\n        }\n    }\n\n    render() {\n        return (\n            <div style = {{paddingLeft : '250px', paddingTop : '50px', width : '80%', textAlign : 'center'}}>\n                <Tabs indicatorColor = \"primary\" style = {{width : '700px'}} textColor = \"primary\" value = {this.state.tabClicked} onChange = {(e, v) => this.setState({tabClicked : v})}>\n                    <Tab label=\"Price\" />\n                    <Tab label=\"Summary\" />\n                    <Tab label=\"Transactions\" />\n                </Tabs>\n                {this.state.tabClicked === 0 && <div><PriceLayout userData = {this.props.userData} /></div>}\n                {this.state.tabClicked === 1 && <div><PriceTableLayout userData = {this.props.userData} /></div>}\n                {this.state.tabClicked === 2 && <div><TransactionLayout userData = {this.props.userData} /></div>}\n            </div>\n        )\n    }\n}\n\nexport default Visualization","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { getProductList, getN } from '../scripts/Product';\nimport { Typography , Card, Divider, TextField, Button, Table, TableHead, TableCell, TableBody, TableRow} from '@material-ui/core';\n\nclass TransacionList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userID : this.props.userData._id,\n            N : 20,\n            productList : {},\n            data : []\n        }\n    }\n\n    prepareProductList(products) {\n        var list = {}\n        for(var i = 0; i < products.length; i ++) {\n            list[products[i]._id] = products[i].name\n        }\n\n        this.setState({productList : list})\n    }\n\n    getNTransactions() {\n        getN(this.state.userID, this.state.N, (result) => {\n            this.setState({data : result})\n        })\n    }\n\n    componentWillMount() {\n        getProductList(this.state.userID, (result) => {\n            this.prepareProductList(result.result)\n            this.getNTransactions()\n        })\n    }\n\n    render() {\n        return (\n            <Card style = {{margin : '20px', padding : '30px'}}>\n                <Typography variant = \"h5\">Transaction List</Typography>\n                <Divider />\n                <p>Select the number of transactions you want to display, last 20 transactions are displayed by default.</p>\n                <TextField\n                    id=\"outlined-name\"\n                    label=\"Number of transactions:\"\n                    value={this.state.N}\n                    onChange = {(e) => {this.setState({N : e.target.value})}}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <Button variant = \"contained\" color = \"primary\" onClick = {() => {\n                    this.getNTransactions()\n                }}>Update</Button>\n                <Divider />\n                <div style = {{marginTop : '20px'}}>\n                    <Table>\n                        <TableHead>\n                            <TableCell>Product Name </TableCell>\n                            <TableCell>Total Price </TableCell>\n                            <TableCell>Quantity Purchased </TableCell>\n                            <TableCell>Date </TableCell>\n                            <TableCell>Total Revenue till now </TableCell>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                this.state.data.map((k, v) => {\n                                    return (<TableRow>\n                                        <TableCell>{this.state.productList[k.productID]}</TableCell>\n                                        <TableCell>{k.cost}</TableCell>\n                                        <TableCell>{k.quantity}</TableCell>\n                                        <TableCell>{k.date + \"/\" + k.month + \"/\" + k.year}</TableCell>\n                                        <TableCell>{k.totalCost}</TableCell>\n                                    </TableRow>)\n                                })\n                            }\n                        </TableBody>\n                    </Table>\n                </div>\n            </Card>\n        )\n    }\n}\n\n\nclass TransactionListContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <div style = {{paddingLeft : '250px', paddingTop : '50px', width : '80%'}}>\n                <TransacionList userData = {this.props.userData} />\n            </div>\n        )\n    }\n}\n\n\nexport default TransactionListContainer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Navigator, SidePanel} from './Sidebar'\nimport SignIn from '../Login';\nimport Home from './Home';\nimport ProductList from './Products';\nimport Visualization from './Visualization';\nimport TransactionListContainer from './txinfo';\n\n\n\nclass MainArea extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <main><div><this.props.component userData = {this.props.userData}/></div></main>\n        )\n    }\n}\n\n\nclass Dashboard extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            component : Home\n        }\n        this.handler = this.handler.bind(this)\n    }\n\n    handler(choice) {\n        switch(choice) {\n            case 0 : this.setState({component : Home}); break;\n            case 2 : this.setState({component : Visualization}); break;\n            case 3 : this.setState({component : ProductList}); break;\n            case 4 : this.setState({component : TransactionListContainer}); break;\n            default : break;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navigator userData = {this.props.userData}/>\n                <div>\n                    <SidePanel handler = {this.handler}/>\n                    <MainArea component = {this.state.component} userData = {this.props.userData}/>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default Dashboard;","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { login } from './scripts/User';\nimport Dashboard from './dashboard/Dashboard';\n\n\nconst useStyles = {\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n  \n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n  },\n  submit: {\n  },\n};\n\nclass SignIn extends React.Component {\n    constructor(props) {\n       super(props)\n       this.state = {\n         email : '',\n         password : '',\n         message : ''\n       }\n\n       this.classes = {props}\n    }\n\n    render() {\n\n      return (\n          <Grid container component=\"main\" style = {{height: '100vh'}}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} style ={{backgroundImage: 'url(https://source.unsplash.com/random)',\n                  backgroundRepeat: 'no-repeat',\n                  backgroundSize: 'cover',\n                  backgroundPosition: 'center'}} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n              <div style ={{display: 'flex',\n              flexDirection: 'column',\n              textAlign : 'center', width : '90%', margin : '30px auto'}}>\n                <Avatar>\n                  <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                  Sign in\n                </Typography>\n                <div style ={{width: '100%'}} noValidate>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    value = {this.state.email}\n                    onChange = {(e) => {\n                      this.setState({email : e.target.value})\n                    }}\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    value = {this.state.password}\n                    onChange = {(e) => {this.setState({password : e.target.value})}}\n                    autoComplete=\"current-password\"\n                  />\n                  <FormControlLabel\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\n                    label=\"Remember me\"\n                  />\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={this.classes.submit}\n                    onClick = {() => {\n                       login(this.state.email, this.state.password, (result) => {\n                         if(result == null) this.setState({message : 'Login failed, incorrect email or password'})\n                         else ReactDOM.render(<Dashboard userData = {result} />, document.getElementById('root'))\n                       })\n                    }}\n                  >\n                    Sign In\n                  </Button>\n                  <Grid container>\n                    <Grid item xs>\n                      <Link href=\"#\" variant=\"body2\">\n                        Forgot password?\n                      </Link>\n                    </Grid>\n                    <Grid item>\n                      <Link href=\"#\" variant=\"body2\">\n                        {\"Don't have an account? Sign Up\"}\n                      </Link>\n                    </Grid>\n                  </Grid>\n                  <p>{this.state.message}</p>\n                </div>\n              </div>\n            </Grid>\n          </Grid>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(SignIn)","import {DataCollector, LocalStorage} from './basic'\n\n\nfunction login(email, password, ui_callback) {\n    new DataCollector('/user/auth', (result) => {\n        console.log(result)\n        if(!result.error && result.result.length !== 0) {\n            var jsonString = JSON.stringify(result.result[0])\n            console.log(jsonString)\n            new LocalStorage().add(\"login\", jsonString)\n            ui_callback(result.result[0])\n        } else {\n            ui_callback(null)\n        }\n    }).collect({email : email, password : password})\n}\n\nfunction checkStorage() {\n    var ls = new LocalStorage()\n    console.log(ls.check(\"login\"))\n    if(ls.check(\"login\")) \n        return JSON.parse(localStorage.getItem(\"login\"))\n    return null\n}\n\nexport {checkStorage, login}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport SignIn from './Login';\nimport Dashboard from './dashboard/Dashboard';\nimport { checkStorage } from './scripts/User';\n\n\nclass Main extends React.Component {\n    render() {\n        //check login and return \n        var userData = checkStorage()\n        if(userData === null) {\n            return (\n                <SignIn />\n            )\n        } else return (\n            <Dashboard userData = {userData} />\n        )\n    }\n}\n\nReactDOM.render(<Main />, document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/basket.f0c09e4d.jpg\";"],"sourceRoot":""}